SystÃ¨me de Surveillance Intelligent
===================================

.. contents::
   :depth: 2
   :local:

.. _introduction:

============
Introduction
============

**Objectif du Projet**  
Ce systÃ¨me de surveillance intelligente utilise la **vision par ordinateur** pour assurer la sÃ©curitÃ© des personnes (personnes Ã¢gÃ©es, patients, etc.) via trois modÃ¨les IA complÃ©mentaires :  

----

1. **DÃ©tection de chutes** (YOLOv5) : Identifie les chutes en temps rÃ©el Ã  partir d'un flux vidÃ©o.  
2. **PrÃ©diction de chutes** (LSTM + CNN) : Anticipe les risques de chute en analysant les sÃ©quences temporelles (*LSTM*) et les motifs spatiaux (*CNN*).  
3. **DÃ©tection de somnolence** (CNN) : RepÃ¨re les signes de fatigue (yeux fermÃ©s, tÃªte penchÃ©e).  

----

**Approche Technique**  
Avant de plonger dans les dÃ©tails des modÃ¨les, nous commenÃ§ons par le **prÃ©traitement des donnÃ©es**, Ã©tape cruciale pour garantir des prÃ©dictions fiables. Nos donnÃ©es (vidÃ©os et images annotÃ©es) sont :  

----

- **NormalisÃ©es** : Redimensionnement, ajustement de luminositÃ©.  
- **AugmentÃ©es** : Rotation, flip horizontal pour amÃ©liorer la robustesse.  
- **StructurÃ©es** : SÃ©parÃ©es en sÃ©quences temporelles pour le modÃ¨le LSTM.  

----

Objectif : AmÃ©liorer la sÃ©curitÃ© et la qualitÃ© de vie des personnes Ã¢gÃ©es.

----

Description du Projet
---------------------

Solution de surveillance **non intrusive** combinant :

- ModÃ¨les d'IA spÃ©cialisÃ©s  
- DÃ©tection en temps rÃ©el  
- Alertes immÃ©diates  

----

FonctionnalitÃ©s Principales
---------------------------

.. list-table::
   :widths: 30 70
   :header-rows: 0

   * - ğŸ”¹ **DÃ©tection de Somnolence**
     - Analyse des yeux (EAR) et bouche (MAR) - Classification Actif/Somnolent
   * - ğŸ”¹ **PrÃ©diction de Chute**
     - Analyse vidÃ©o prÃ©ventive - ModÃ¨les sÃ©quentiels
   * - ğŸ”¹ **DÃ©tection de Chute**
     - YOLOv5 pour identification immÃ©diate - Alertes visuelles/sonores
   * - ğŸ”¹ **Interface Utilisateur**
     - Application Streamlit avec modes VidÃ©o/Live

----

Structure du Projet
-------------------

.. code-block:: bash

   â”œâ”€â”€ app.py                      # Interface principale Streamlit  
   â”œâ”€â”€ main.py                     # Point d'entrÃ©e principal  
   â”œâ”€â”€ models/                     # ModÃ¨les entraÃ®nÃ©s  
   â”‚   â”œâ”€â”€ yolov5_fall.pt          # DÃ©tection de chutes (YOLOv5)  
   â”‚   â”œâ”€â”€ drowsiness_model.h5     # DÃ©tection de somnolence  
   â”‚   â””â”€â”€ fall_prediction.h5      # PrÃ©diction de chute  
   â”œâ”€â”€ notebooks/                  # Notebooks pour entraÃ®nement et tests  
   â”‚   â”œâ”€â”€ train_drowsiness.ipynb  
   â”‚   â”œâ”€â”€ train_fall_prediction.ipynb  
   â”‚   â””â”€â”€ test_yolov5.ipynb  
   â”œâ”€â”€ utils/                      # Utilitaires  
   â”‚   â””â”€â”€ alert.mp3               # Son d'alerte  
   â”œâ”€â”€ README.md                   # Documentation  
   â””â”€â”€ requirements.txt            # DÃ©pendances du projet    

----

Documentation Technique
-----------------------

.. toctree::
   :maxdepth: 2
   :caption: Contenu DÃ©taillÃ©:
   
   models
   architectures
   application
   defis
   data

.. note::
   Pour toute question technique, consulter le dÃ©pÃ´t GitHub ou contacter l'Ã©quipe projet.