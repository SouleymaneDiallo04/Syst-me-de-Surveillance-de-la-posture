.. Mon Projet documentation master file

#######################################
SystÃ¨me de Surveillance Intelligent
#######################################
.. contents::
   :depth: 2
   :local:

.. _introduction:

============
Introduction
============

**Objectif du Projet**  
Ce projet consiste Ã  dÃ©velopper un **systÃ¨me de surveillance intelligent** basÃ© sur la **vision par ordinateur**, visant Ã  assurer la sÃ©curitÃ© des personnes vulnÃ©rables (telles que les personnes Ã¢gÃ©es ou les patients) Ã  lâ€™aide de trois modÃ¨les dâ€™intelligence artificielle complÃ©mentaires.

----

1. **DÃ©tection de chutes** (YOLOv5) : Identifie les chutes en temps rÃ©el Ã  partir d'un flux vidÃ©o.  
2. **PrÃ©diction de chutes** (LSTM + CNN) : Anticipe les risques de chute en analysant les sÃ©quences temporelles (*LSTM*) et les motifs spatiaux (*CNN*).  
3. **DÃ©tection de somnolence** (CNN) : RepÃ¨re les signes de fatigue (yeux fermÃ©s, tÃªte penchÃ©e).  

----

**Approche Technique**  
Avant de plonger dans les dÃ©tails des modÃ¨les, nous commenÃ§ons par le **prÃ©traitement des donnÃ©es**, Ã©tape cruciale pour garantir des prÃ©dictions fiables. Nos donnÃ©es (vidÃ©os et images annotÃ©es) sont :  
---

==================
Approche Technique
==================

**PrÃ©traitement des donnÃ©es** :

- **Normalisation**  
  âˆ™ Redimensionnement des images  
  âˆ™ Ajustement de la luminositÃ© et contraste  
  âˆ™ Normalisation des valeurs pixel [0-1]

- **Augmentation**  
  âˆ™ Rotation alÃ©atoire (Â±15Â°)  
  âˆ™ Flip horizontal  
  âˆ™ Variation de saturation  

- **Structuration**  
  âˆ™ DÃ©coupage en sÃ©quences de 30 frames  
  âˆ™ Pas temporel de 5 images  
  âˆ™ Format (sÃ©quences, hauteur, largeur, canaux)
----  

Objectif : AmÃ©liorer la sÃ©curitÃ© et la qualitÃ© de vie des personnes Ã¢gÃ©es.

----

Description du Projet
---------------------

Solution de surveillance **non intrusive** combinant :

- ModÃ¨les d'IA spÃ©cialisÃ©s  
- DÃ©tection en temps rÃ©el  
- Alertes immÃ©diates  

----

FonctionnalitÃ©s Principales
---------------------------

.. list-table::
   :widths: 30 70
   :header-rows: 0

   * - ğŸ”¹ **DÃ©tection de Somnolence**
     - Analyse des yeux (EAR) et bouche (MAR) - Classification Actif/Somnolent
   * - ğŸ”¹ **PrÃ©diction de Chute**
     - Analyse vidÃ©o prÃ©ventive - ModÃ¨les sÃ©quentiels
   * - ğŸ”¹ **DÃ©tection de Chute**
     - YOLOv5 pour identification immÃ©diate - Alertes visuelles/sonores
   * - ğŸ”¹ **Interface Utilisateur**
     - Application Streamlit avec modes VidÃ©o/Live

----

Structure du Projet
-------------------

.. code-block:: bash

   â”œâ”€â”€ app.py                      # Interface principale Streamlit  
   â”œâ”€â”€ main.py                     # Point d'entrÃ©e principal  
   â”œâ”€â”€ models/                     # ModÃ¨les entraÃ®nÃ©s  
   â”‚   â”œâ”€â”€ yolov5_fall.pt          # DÃ©tection de chutes (YOLOv5)  
   â”‚   â”œâ”€â”€ drowsiness_model.h5     # DÃ©tection de somnolence  
   â”‚   â””â”€â”€ fall_prediction.h5      # PrÃ©diction de chute  
   â”œâ”€â”€ notebooks/                  # Notebooks pour entraÃ®nement et tests  
   â”‚   â”œâ”€â”€ train_drowsiness.ipynb  
   â”‚   â”œâ”€â”€ train_fall_prediction.ipynb  
   â”‚   â””â”€â”€ test_yolov5.ipynb  
   â”œâ”€â”€ utils/                      # Utilitaires  
   â”‚   â””â”€â”€ alert.mp3               # Son d'alerte  
   â”œâ”€â”€ README.md                   # Documentation  
   â””â”€â”€ requirements.txt            # DÃ©pendances du projet    

----

Documentation Technique
-----------------------

.. toctree::
   :maxdepth: 2
   :caption: Contenu DÃ©taillÃ©:
   
   models
   architectures
   application
   defis
   data
   configuration  des models
   instalations des packages 

.. note::
   Pour toute question technique, consulter le dÃ©pÃ´t GitHub ou contacter l'Ã©quipe projet au mail suivant hinimdoumorsia@gmail.com/.

==================
Structure du Projet
==================

.. code-block:: bash

   â”œâ”€â”€ app.py                      # Interface principale Streamlit  
   â”œâ”€â”€ models/                     # ModÃ¨les entraÃ®nÃ©s  
   â”‚   â”œâ”€â”€ yolov5_fall.pt          # DÃ©tection de chutes (YOLOv5)  
   â”‚   â”œâ”€â”€ drowsiness_model.h5     # DÃ©tection de somnolence  
   â”‚   â””â”€â”€ fall_prediction.h5      # PrÃ©diction de chute  
   â”œâ”€â”€ notebooks/                  # Notebooks pour entraÃ®nement et tests  
   â”‚   â”œâ”€â”€ train_drowsiness.ipynb  
   â”‚   â”œâ”€â”€ train_fall_prediction.ipynb  
   â”‚   â””â”€â”€ test_yolov5.ipynb  
   â”œâ”€â”€ utils/                      # Utilitaires  
   â”‚   â””â”€â”€ alert.mp3               # Son d'alerte  
   â””â”€â”€ requirements.txt            # DÃ©pendances du projet

==================
DÃ©fis Techniques
==================

**Principaux Challenges** :  
- Optimisation des performances temps rÃ©el  
- RÃ©duction des faux positifs  
- Gestion des ressources matÃ©rielles  

**Solutions** :  
- Quantification des modÃ¨les  
- Pipeline parallÃ©lisÃ©  
- SÃ©lection optimale des seuils  

.. note::
   Documentation mise Ã  jour le |date|. Code source disponible sur `GitHub <https://github.com/votre-repo>`_.