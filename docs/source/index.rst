.. Mon Projet documentation master file

#######################################
SystÃ¨me de Surveillance Intelligent
#######################################
.. contents::
   :depth: 2
   :local:

.. _introduction:

============
Introduction
============

**Objectif du Projet**

Ce projet consiste Ã  dÃ©velopper un **systÃ¨me de surveillance intelligent** basÃ© sur la **vision par ordinateur**, visant Ã  assurer la sÃ©curitÃ© des personnes vulnÃ©rables (telles que les personnes Ã¢gÃ©es ou les patients) Ã  lâ€™aide de trois modÃ¨les dâ€™intelligence artificielle complÃ©mentaires.

----

1. **DÃ©tection de chutes** (YOLOv5) : Identifie les chutes en temps rÃ©el Ã  partir d'un flux vidÃ©o.  
2. **PrÃ©diction de chutes** (LSTM + CNN) : Anticipe les risques de chute en analysant les sÃ©quences temporelles (*LSTM*) et les motifs spatiaux (*CNN*).  
3. **DÃ©tection de somnolence** (CNN) : RepÃ¨re les signes de fatigue (yeux fermÃ©s, tÃªte penchÃ©e).  

----

**Approche Technique**  
Avant de plonger dans les dÃ©tails des modÃ¨les, nous commenÃ§ons par le **prÃ©traitement des donnÃ©es**, Ã©tape cruciale pour garantir des prÃ©dictions fiables. Nos donnÃ©es (vidÃ©os et images annotÃ©es) sont :  
---

==================
Approche Technique
==================

**PrÃ©traitement des donnÃ©es** :

- **Normalisation**  
  âˆ™ Redimensionnement des images  
  âˆ™ Ajustement de la luminositÃ© et contraste  
  âˆ™ Normalisation des valeurs pixel [0-1]

- **Augmentation**  
  âˆ™ Rotation alÃ©atoire (Â±15Â°)  
  âˆ™ Flip horizontal  
  âˆ™ Variation de saturation  

- **Structuration**  
  âˆ™ DÃ©coupage en sÃ©quences de 30 frames  
  âˆ™ Pas temporel de 5 images  
  âˆ™ Format (sÃ©quences, hauteur, largeur, canaux)
----  

Objectif : AmÃ©liorer la sÃ©curitÃ© et la qualitÃ© de vie des personnes Ã¢gÃ©es.

----

Description du Projet
---------------------

Solution de surveillance **non intrusive** combinant :

- ModÃ¨les d'IA spÃ©cialisÃ©s  
- DÃ©tection en temps rÃ©el  
- Alertes immÃ©diates  

----

FonctionnalitÃ©s Principales
---------------------------

.. list-table::
   :widths: 30 70
   :header-rows: 0

   * - ğŸ”¹ **DÃ©tection de Somnolence**
     - Analyse des yeux (EAR) et bouche (MAR) - Classification Actif/Somnolent
   * - ğŸ”¹ **PrÃ©diction de Chute**
     - Analyse vidÃ©o prÃ©ventive - ModÃ¨les sÃ©quentiels
   * - ğŸ”¹ **DÃ©tection de Chute**
     - YOLOv5 pour identification immÃ©diate - Alertes visuelles/sonores
   * - ğŸ”¹ **Interface Utilisateur**
     - Application Streamlit avec modes VidÃ©o/Live

----

Structure du Projet
-------------------

.. code-block:: bash

   â”œâ”€â”€ app.py                      # Interface principale Streamlit  
   â”œâ”€â”€ main.py                     # Point d'entrÃ©e principal  
   â”œâ”€â”€ models/                     # ModÃ¨les entraÃ®nÃ©s  
   â”‚   â”œâ”€â”€ yolov5_fall.pt          # DÃ©tection de chutes (YOLOv5)  
   â”‚   â”œâ”€â”€ drowsiness_model.h5     # DÃ©tection de somnolence  
   â”‚   â””â”€â”€ fall_prediction.h5      # PrÃ©diction de chute  
   â”œâ”€â”€ notebooks/                  # Notebooks pour entraÃ®nement et tests  
   â”‚   â”œâ”€â”€ train_drowsiness.ipynb  
   â”‚   â”œâ”€â”€ train_fall_prediction.ipynb  
   â”‚   â””â”€â”€ test_yolov5.ipynb  
   â”œâ”€â”€ utils/                      # Utilitaires  
   â”‚   â””â”€â”€ alert.mp3               # Son d'alerte  
   â”œâ”€â”€ README.md                   # Documentation  
   â””â”€â”€ requirements.txt            # DÃ©pendances du projet    
----

Configuration des Models
------------------------



----

Instalations des Packages
-------------------------

Installation des Packages Essentiels
====================================

**modÃ¨le de dÃ©tection de somnolence**
-------------------------------------
Les installations suivantes sont cruciales pour assurer le bon fonctionnement du **modÃ¨le de dÃ©tection de somnolence**. Elles couvrent la rÃ©cupÃ©ration des donnÃ©es, le traitement dâ€™image, lâ€™analyse statistique et les modÃ¨les machine learning.

Installation Globale
---------------------

Pour installer tous les packages nÃ©cessaires, vous pouvez exÃ©cuter :  

.. code-block:: bash

   pip uninstall -y mediapipe
   pip install mediapipe==0.10.7 opencv-python numpy matplotlib pandas scikit-learn xgboost python-docx python-pptx kagglehub

TÃ©lÃ©chargement et PrÃ©paration des DonnÃ©es
-----------------------------------------

Le dataset est tÃ©lÃ©chargÃ© via kagglehub et copiÃ© localement :  

.. code-block:: python

   import kagglehub

   # TÃ©lÃ©charger le dataset
   path = kagglehub.dataset_download("rakibuleceruet/drowsiness-prediction-dataset")
   print("Path to dataset files:", path)

   import shutil

   source = "/root/.cache/kagglehub/datasets/rakibuleceruet/drowsiness-prediction-dataset/versions/1"
   destination = "/content/drowsiness_dataset"

   shutil.copytree(source, destination, dirs_exist_ok=True)
   print("Dataset copiÃ© dans :", destination)

Importations UtilisÃ©es
------------------------

Une fois les packages installÃ©s, nous les utilisons via les importations suivantes :  

.. code-block:: python

   import mediapipe as mp
   import cv2
   import numpy as np
   import matplotlib.pyplot as plt
   import os
   import pandas as pd
   import shutil
   import pickle
   import sklearn
   from sklearn.model_selection import train_test_split
   from sklearn.pipeline import make_pipeline
   from sklearn.preprocessing import StandardScaler
   from sklearn.svm import SVC
   from sklearn.ensemble import RandomForestClassifier
   from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_curve, roc_auc_score, precision_recall_curve, classification_report, confusion_matrix
   import xgboost as xgb
   from docx import Document
   from pptx import Presentation
   from pptx.util import Inches

RÃ´le des Packages
------------------

- **mediapipe** : DÃ©tection et suivi des repÃ¨res faciaux.
- **opencv (cv2)** : Traitement vidÃ©o et image.
- **numpy** : Calcul numÃ©rique.
- **matplotlib** : Visualisation de donnÃ©es et courbes.
- **pandas** : Manipulation et analyse de donnÃ©es tabulaires.
- **shutil** : Manipulation des fichiers et rÃ©pertoires.
- **pickle** : SÃ©rialisation et sauvegarde dâ€™objets Python.
- **scikit-learn (sklearn)** : PrÃ©traitement, modÃ¨les SVM/RandomForest, mÃ©triques.
- **xgboost** : ModÃ¨les dâ€™ensemble performants pour la classification.
- **python-docx** : Lecture et Ã©criture de documents Word.
- **python-pptx** : CrÃ©ation automatique de prÃ©sentations PowerPoint.
- **kagglehub** : TÃ©lÃ©chargement des datasets depuis Kaggle.



----

Documentation Technique
-----------------------

.. toctree::
   :maxdepth: 2
   :caption: Contenu DÃ©taillÃ©:
   
   models
   architectures
   application
   defis
   data 

.. note::
   Pour toute question technique, consulter le dÃ©pÃ´t GitHub ou contacter l'Ã©quipe projet au mail suivant hinimdoumorsia@gmail.com/.

==================
Structure du Projet
==================

.. code-block:: bash

   â”œâ”€â”€ app.py                      # Interface principale Streamlit  
   â”œâ”€â”€ models/                     # ModÃ¨les entraÃ®nÃ©s  
   â”‚   â”œâ”€â”€ yolov5_fall.pt          # DÃ©tection de chutes (YOLOv5)  
   â”‚   â”œâ”€â”€ drowsiness_model.h5     # DÃ©tection de somnolence  
   â”‚   â””â”€â”€ fall_prediction.h5      # PrÃ©diction de chute  
   â”œâ”€â”€ notebooks/                  # Notebooks pour entraÃ®nement et tests  
   â”‚   â”œâ”€â”€ train_drowsiness.ipynb  
   â”‚   â”œâ”€â”€ train_fall_prediction.ipynb  
   â”‚   â””â”€â”€ test_yolov5.ipynb  
   â”œâ”€â”€ utils/                      # Utilitaires  
   â”‚   â””â”€â”€ alert.mp3               # Son d'alerte  
   â””â”€â”€ requirements.txt            # DÃ©pendances du projet

==================
DÃ©fis Techniques
==================

**Principaux Challenges** : 

- Optimisation des performances temps rÃ©el  
- RÃ©duction des faux positifs  
- Gestion des ressources matÃ©rielles  

**Solutions** : 

- Quantification des modÃ¨les  
- Pipeline parallÃ©lisÃ©  
- SÃ©lection optimale des seuils  

.. note::
   Documentation mise Ã  jour le |date|. Code source disponible sur `GitHub <https://github.com/votre-repo>`_.